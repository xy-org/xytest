import xy.ctti;
#import libxy.array;
import libxy.string;
import libxy.stdio;
import libxy.perf;
import libxy.tty;
import xytest;

def main~[EntryPoint{priority=100}]() {
    print("Hello from test runner\n");
    tests := @for (f in $* ~Test()) TestVector{
        name=f'nameof,
        package=f'packageof,
        testCb=f,
    };

    testingStart := time();

    #runTests(tests);
    print(f"Found {tests'len} tests\n");
    for (t in tests) {
        print(f"Running {t.package}.{t.name}... ");
        [t.testCb]();
        print("Success\n");
    }

    elapsed := time() - testingStart;
    elapsedS := elapsed / 1_000_000_000l;
    elapsedDecis := (elapsed \mod 1_000_000_000l) / 100_000_000l;

    badge := badge(tests'len);
    print(
        f"{esc(.green, .bold)}\
        ===== {tests'len} passed in {elapsedS}.{elapsedDecis}s {badge}=====\
        {esc(.reset)}\n"
    );
}

def badge(num: Size) -> Str~MemStatic {
    if (num > 0 & num <= 2) return "🥳 ";
    if (num == 42) return "🤪 ";
    if (num == 69) return "☯️ ";
    if (num == 100) return "💯 ";
    if (num >= 300 & num < 310) return "🐡 ";
    if (num == 314) return "🥧 ";
    if (num == 628) return "🥧🥧 ";
    if (num == 942) return "🥧🥧🥧 ";
    if (num >= 1000 & num < 1010) return "🐉 ";
    if (num >= 2000 & num < 2010) return "🦖 ";
    if (num >= 10000 & num < 10010) return "🦄 ";
    return "";
}
